GITHUB USEAGE:
<git remote> shows all current remote repositories

To add repository on github as remote:
	• <git remote add REPOSITORYNAME URL>
		• If only one remote, standard to name it "origin" --> <git remote add origin URL>
	• Need to provide URL to github page (viewable under repository page on github)

<git remote -v> (v for verbose) shows both url (fetch and push) and remote repository name

<git push REMOTENAME BRANCHNAME> copies local repository branch onto github

<git pull REMOTENAME BRANCHNAME> copies remote repository branch contents onto local repository

Forking:
	• Create copy of someone's github repository by clicking "fork" on desktop site
	• Clone your fork with <git clone HTTPADDRESSOFFORK>
	• Cloning automatically adds a remote (check with <git remote -v>)
	• Edit, add, commit, and push/pull to/from your fork locally

<git fetch REMOTENAME> gets the commit from github to your local repository. You can then locally merge.
	• This 2-step process (fetch then merge) is exactly what happens when you <git pull> 
		• i.e. git pull = git fetch + git merge
		• git fetch allows you to look at the changes before merging

Inspect local copies from fetch using <git log origin/master> or <git diff origin/master master>
	• master (local to machine) and origin/master (another "head") are in the same place locally after a push. 
		• If you commit, your master follows, but origin/master stays behind. 
		• If you fetch your origin/master updates to where master was on github.

If <git status> is Out-of-sync, there are commit(s) on origin/master and master that aren't present on each other

Workflow: pull fork, create branch, then add, commit, and push (with BRANCHNAME instead of master on push).
	• Can create pull request on github with your pushed branch (request to pull it into fork)